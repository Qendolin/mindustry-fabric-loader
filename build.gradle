plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.spongepowered.org/maven/"
    }
    maven {
        url "https://maven.fabricmc.net/"
    }
    maven {
        url 'https://jitpack.io'
    }
}

sourceCompatibility = 17
targetCompatibility = 17
compileJava.options.release.set(17)

version = project_version
group = "com.qendolin.mindustryloader"
archivesBaseName = "mindustry-fabric-loader"

dependencies {
    // Copied from https://github.com/FabricMC/fabric-loader/blob/master/build.gradle
    testImplementation 'org.jetbrains:annotations:22.0.0'

    api "net.fabricmc:fabric-loader:${loader_version}"

    api "org.ow2.asm:asm:${project.asm_version}"
    api "org.ow2.asm:asm-analysis:${project.asm_version}"
    api "org.ow2.asm:asm-commons:${project.asm_version}"
    api "org.ow2.asm:asm-tree:${project.asm_version}"
    api "org.ow2.asm:asm-util:${project.asm_version}"

    api("net.fabricmc:sponge-mixin:${project.mixin_version}") {
        exclude module: 'launchwrapper'
        exclude group: 'com.google.guava'
        exclude group: 'com.google.code.gson'
    }
    api 'net.fabricmc:access-widener:2.1.0'
    api "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"

}

java {
    withSourcesJar()
}

task exportDependencies(type: Copy) {
    doFirst {
        delete "fabric-dependencies"
    }

    configurations.implementation.setCanBeResolved(true)
    configurations.api.setCanBeResolved(true)
    from configurations.implementation {
        exclude group: "com.google.guava"
        exclude group: "com.google.code.gson"
        exclude group: "org.jetbrains"
    }
    into "fabric-dependencies"
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Specification-Version': 8.0,
                'Multi-Release': 'true'
        )
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(jar)
            artifact(sourcesJar)
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }

    repositories {
    }
}

